/* отличие использования кавычек от апострофов в аглийском языке
КАВЫЧКИ
- кавычки всегда парные, причем
- прямо перед открывающей кавычкой идет символ [\s^\A] а сразу после нее - [\S$\Z]
- для закрывающей - наоборот [\S^\A] кавычка [\s^\Z]
- без исключений если нет грамматических ошибок

АПОСТРОФЫ
- с обоих сторон от апострофа без пробелов должны стоять только буквы
-- найденные исключения: 
'em - исключение / 'em /
lookin' - окончание ing  /\win' /
'm - исключение / 'm /
'cause - исключение / 'cause /
nothin' - окончание ing /\win' /
doin' - окончание ing /\win' /
evenin' - окончание ing /\win' /
lickin' - окончание ing /\win' /
makin' - окончание ing /\win' /
o' - исключение / o' /
'Kid,' - можно заменить кавычками

есть рассказ O Henry `The Guilty Party`
исходник в одноименном файле O Henry `The Guilty Party`.txt
намеренно испортим его, заменив все кавычки на апострофы автозаменой и попробуем восстановить, найдя кавычки по шаблону.
испорченный вариант в файле:
./js/spoiled.js
*/
////////


//для начала поставим все переводы строк для читаемости
spoiled=spoiled.replace(/\n/g, "<br>");
//у меня не получилось составлять рег. выражение сразу с исключениями для этого необходима сложная логика в частности логическое "и" поэтому исключения отрабатываю по одному

let regs = [/ 'em /gm, / 'm /gm, / 'cause /gm, / o' /gm, / \w+?in' /gm];
console.log(regs);
let replaceNames = new Array();
for(let i=0;i<regs.length;i++){
	replaceNames[i]="rEpLaCe"+i;
	spoiled=spoiled.replace(regs[i], replaceNames[i]);
}



let reg1 = /(?:([\s^\A]'[\S$\Z]).+?([\S$\Z]'[\S$\Z]))/g;





document.write(spoiled);



